{"version":3,"file":"static/js/884.c27ee41e.chunk.js","mappings":"iOAqFA,UA/EqB,WAAO,IAAD,IACzB,GAA0BA,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,UAAS,KAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAiB7C,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BC,EAAAA,EAAAA,IAAeP,GAF1C,OAEUQ,EAFV,OAGIX,EAASW,GAHb,uDAKIT,EAAe,KAAMS,SAASC,QALlC,6EADc,uBAAC,WAAD,wBAWdC,EAED,GAAE,KAGD,iCAEE,SAAC,KAAD,CAAMC,GAAIT,EAAV,qBACiB,MAAhBJ,GACC,8CAEA,iCACE,iBAAKc,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAApC,WACE,yBACIlB,EAAMmB,aAGN,gBACEH,MAAO,CAAEI,MAAO,SAChBC,IAAG,8CAAyCrB,EAAMmB,aAClDG,IAAI,MALN,yCAUJ,iBAAKN,MAAO,CAAEO,cAAe,UAA7B,WACE,uBAAIvB,EAAMwB,SACV,uBAAIxB,EAAMyB,gBACV,wCAAgBzB,EAAM0B,iBACtB,sCAAc1B,EAAM2B,aACpB,gBAAIC,UAAU,aAAd,oBAEG5B,EAAM6B,QACL7B,EAAM6B,OAAOC,KAAI,SAAAC,GACf,OAAO,wBAAoBA,EAAMC,MAAjBD,EAAME,GACvB,cAKT,4BACE,2BACE,yBACE,SAAC,KAAD,CAAMlB,GAAG,OAAT,yBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,+BAGJ,0BACE,SAAC,KAAD,cASb,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { fetchMovieById } from 'api';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [errorStatus, setErrorStatus] = useState(200);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        const response = await fetchMovieById(movieId);\n        setMovie(response);\n      } catch (error) {\n        setErrorStatus(error.response.status);\n        return;\n      }\n    }\n\n    fetchMovie();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {/* <div> */}\n      <Link to={backLinkHref}>Go Back</Link>\n      {errorStatus === 404 ? (\n        <p>Details not found</p>\n      ) : (\n        <>\n          <div style={{ display: 'flex', gap: '40px' }}>\n            <div>\n              {!movie.poster_path ? (\n                <div>No Image</div>\n              ) : (\n                <img\n                  style={{ width: '300px' }}\n                  src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n                  alt=\"\"\n                />\n              )}\n            </div>\n\n            <div style={{ flexDirection: 'column' }}>\n              <p>{movie.title}</p>\n              <p>{movie.release_date}</p>\n              <p>User Score: {movie.vote_average}</p>\n              <p>Overview: {movie.overview}</p>\n              <ul className=\"flex gap-5\">\n                Genres:\n                {movie.genres &&\n                  movie.genres.map(genre => {\n                    return <li key={genre.id}>{genre.name}</li>;\n                  })}\n              </ul>\n            </div>\n          </div>\n\n          <div>\n            <ul>\n              <li>\n                <Link to=\"cast\">See cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">See reviews</Link>\n              </li>\n            </ul>\n            <div>\n              <Outlet />\n            </div>\n          </div>\n          {/* </div> */}\n        </>\n      )}\n      {/* </div> */}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["useState","movie","setMovie","errorStatus","setErrorStatus","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","fetchMovieById","response","status","fetchMovie","to","style","display","gap","poster_path","width","src","alt","flexDirection","title","release_date","vote_average","overview","className","genres","map","genre","name","id"],"sourceRoot":""}